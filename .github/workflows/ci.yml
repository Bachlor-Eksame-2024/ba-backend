name: FastAPI CI Pipeline

on:
  pull_request:
    branches:
      - develop

env:
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password
  POSTGRES_DB: test_db
  PGADMIN_DEFAULT_EMAIL: admin@admin.com
  PGADMIN_DEFAULT_PASSWORD: admin
  COMPOSE_PROJECT_NAME: ba-backend

jobs:
  test-and-lint:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: ./server
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
        shell: cmd

      - name: Run linting
        working-directory: ./server
        run: |
          flake8 . --max-line-length=100 --exclude=__pycache__,.venv
        shell: cmd

      - name: Run tests
        working-directory: ./server
        run: |
          pytest -v --cov=. --cov-report=term-missing
        shell: cmd

      - name: Start Docker Compose
        run: |
          docker compose version
          docker compose down -v --remove-orphans
          docker compose build --no-cache
          docker compose up -d
        shell: cmd

      - name: Wait for FastAPI
        run: |
          powershell -Command {
            $attempts = 30
            $url = "http://localhost:3000/docs"
            
            while ($attempts -gt 0) {
              try {
                $response = Invoke-WebRequest -Uri $url -UseBasicParsing
                if ($response.StatusCode -eq 200) {
                  Write-Host "FastAPI is up!"
                  exit 0
                }
              }
              catch {
                Write-Host "Waiting for FastAPI to be ready..."
                Start-Sleep -Seconds 2
                $attempts--
              }
            }
            
            Write-Error "FastAPI failed to start"
            exit 1
          }
        shell: powershell

      - name: Show Docker logs
        if: always()
        run: |
          docker compose logs
        shell: cmd

      - name: Cleanup
        if: always()
        run: |
          docker compose down -v --remove-orphans
        shell: cmd
